{"version":3,"sources":["Connection.js","App.js","index.js"],"names":["Panel","Collapse","Connection","url","id","add","remove","useState","connection","setConnection","text","setText","sent","setSent","received","setReceived","connected","status","setStatus","exit","close","undefined","useEffect","WebSocket","onopen","e","console","log","time","Date","valueOf","onclose","onmessage","data","timestamp","timeStamp","key","uuid","className","ghost","tags","color","title","extra","type","danger","onClick","icon","CloseCircleOutlined","disabled","MinusCircleOutlined","PlusCircleOutlined","small","column","Item","label","length","TextArea","name","value","onChange","target","send","JSON","stringify","trim","message","error","header","map","r","s","Content","Layout","App","setURL","connections","setConnections","addConnection","u","removeConnection","i","filter","c","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eed87733.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Button, Input, PageHeader, Descriptions, Collapse, Tag, message } from \"antd\";\nimport { CloseCircleOutlined, PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport { v4 as uuid } from 'uuid';\nimport './Connection.css'\n\nconst { Panel } = Collapse;\n\nfunction Connection({ url, id, add, remove }) {\n\tconst [connection, setConnection] = useState();\n\tconst [text, setText] = useState('');\n\tconst [sent, setSent] = useState([]);\n\tconst [received, setReceived] = useState([]);\n\tconst [status, setStatus] = useState({ connected: false });\n\n\tconst send = () => {\n\t\tif (status.connected) {\n\t\t\tconnection.send(JSON.stringify(text.trim()));\n\t\t\tsetSent([...sent, { text: text.trim(), timestamp: (new Date()).valueOf(), key: uuid() }]);\n\t\t\tsetText('');\n\t\t} else {\n\t\t\tmessage.error(\"Couldn't send message: Connection not opened (yet)\")\n\t\t}\n\t}\n\n\tconst exit = () => {\n\t\tif (connection) {\n\t\t\tconnection.close();\n\t\t\tsetConnection(undefined);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (!connection) setConnection(new WebSocket(url));\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (connection) {\n\t\t\tconnection.onopen = (e) => {\n\t\t\t\tconsole.log({ time: new Date().valueOf(), e });\n\t\t\t\tsetStatus({ ...status, connected: true })\n\t\t\t}\n\t\t\tconnection.onclose = (e) => {\n\t\t\t\tconsole.log({ time: new Date().valueOf(), e });\n\t\t\t\tsetStatus({ ...status, connected: false })\n\t\t\t}\n\t\t\tconnection.onmessage = (e) => {\n\t\t\t\tsetReceived([{ text: e.data, timestamp: e.timeStamp, key: uuid() }, ...received]);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn (\n\t\t<div className='websocket-header-wrapper'>\n\t\t\t<PageHeader\n\t\t\t\tghost={false}\n\t\t\t\ttags={\n\t\t\t\t\t(status.connected) ? <Tag color=\"green\">Online</Tag> : <Tag color=\"red\">Offline</Tag>\n\t\t\t\t}\n\t\t\t\tclassName='websocket-header'\n\t\t\t\ttitle={`${id}`}\n\t\t\t\textra={[\n\t\t\t\t\t<span>{\n\t\t\t\t\t\t(connection)\n\t\t\t\t\t\t\t? <Button type='primary' danger onClick={exit} icon={<CloseCircleOutlined />} disabled={!status.connected}>Close</Button>\n\t\t\t\t\t\t\t: <Button type='primary' danger onClick={() => { exit(); remove(id); }} icon={<MinusCircleOutlined />}>Remove</Button>\n\t\t\t\t\t}</span>,\n\t\t\t\t\t<Button onClick={() => add(url)} icon={<PlusCircleOutlined />}>Duplicate</Button>\n\n\t\t\t\t]}>\n\t\t\t\t<Descriptions small='small' column={3}>\n\t\t\t\t\t<Descriptions.Item label='URL'><b>{url}</b></Descriptions.Item>\n\t\t\t\t\t<Descriptions.Item label='Total Sent'>{sent.length}</Descriptions.Item>\n\t\t\t\t\t<Descriptions.Item label='Total Received'>{received.length}</Descriptions.Item>\n\t\t\t\t\t<Descriptions.Item label='Last received'>{(received.length > 0) ? received[0].text : ''}</Descriptions.Item>\n\t\t\t\t</Descriptions>\n\t\t\t\t<div className=\"websocket-input-wrapper\">\n\t\t\t\t\t<div className='websocket-input-container'>\n\t\t\t\t\t\t<Input.TextArea className='websocket-input' name=\"Message...\" type=\"text\" value={text} disabled={!status.connected} onChange={e => setText(e.target.value)} />\n\t\t\t\t\t\t<Button className='websocket-input-send' onClick={send} type='primary' disabled={!status.connected}>Send</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='websocket-input-length-counter'>Message length: {text.trim().length}</div>\n\t\t\t\t</div>\n\t\t\t\t<Collapse ghost>\n\t\t\t\t\t<Panel header='Received messages'>\n\t\t\t\t\t\t<div className='message-display'>\n\t\t\t\t\t\t\t{(received.length > 0) ? received.map(r => (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<samp>{r.text}</samp>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)) : \"\"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel header='Sent messages'>\n\t\t\t\t\t\t<div className='message-display'>\n\t\t\t\t\t\t\t{(sent.length > 0) ? sent.map(s => (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<samp>{s.text}</samp>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)) : \"\"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Panel>\n\t\t\t\t</Collapse>\n\t\t\t</PageHeader>\n\t\t</div >\n\t);\n}\n\nexport default Connection;\n","import { Input, Layout, Button } from \"antd\";\nimport { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport Connection from './Connection';\nimport './App.css';\n\nconst { Content } = Layout;\n\nfunction App() {\n\tconst [url, setURL] = useState('ws://localhost:8999/connection');\n\tconst [connections, setConnections] = useState([]);\n\n\tconst addConnection = (u) => setConnections([{ url: u, id: uuid(), key: uuid()}, ...connections]);\n\tconst removeConnection = (i) => setConnections(connections.filter(c => c.id !== i));\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Layout className=\"layout\">\n\t\t\t\t<Content className='content'>\n\t\t\t\t\t<div className=\"url-input-container\">\n\t\t\t\t\t\t<Input className='url-input' value={url} onChange={e => setURL(e.target.value)}></Input>\n\t\t\t\t\t\t<Button className='url-input-add' onClick={() => addConnection(url)}>Add connection</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"table\">\n\t\t\t\t\t\t{connections.map(c => <Connection {...c} add={addConnection} remove={removeConnection} />)}\n\t\t\t\t\t</div>\n\t\t\t\t</Content>\n\t\t\t</Layout>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}